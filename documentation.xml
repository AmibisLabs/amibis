<?xml version="1.0" encoding="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="xsl/page.xsl" ?>

<page xmlns="http://custom" xmlns:custom="http://custom" xmlns:xi="http://www.w3.org/2001/XInclude">
  <xi:include href="common/common.xml#xpointer(//*)" />

  <title>OMiSCID Documentation Page</title>
  <currentMenu id="Documentation"/>

  <custom:content xmlns="http://www.w3.org/1999/xhtml">
    <h1>Installation</h1>
    
    <h2>General Information</h2>
      <p>The current version of <omiscid/> requires DNSSD to be installed and running. For example, you can use mDNSResponder (Bonjour from Apple).</p>
    <h2>C++</h2>
      <p>In order to compile your <omiscid/> source code, you will need to have Bonjour, libxml with their C++ headers and libs for bindings.</p>
    <h2>Java</h2>
      <p>The developement using the non-OSGi version of omiscid just requires to have the following jars in your classpath (all bundled with omiscid releases):
        <ul>
          <li>omiscid-1.?.?.jar: the omiscid library</li>
          <li>castor-1.0.5-xml.jar, xerces.jar, commons-logging-1.1.jar: the base libraries required by <a href="http://www.castor.org/xml-framework.html">Castor XML</a></li>
          <li>jakarta-oro-2.0.8.jar: the <a href="http://jakarta.apache.org/oro/">apache jakarta oro library</a> required by some Castor XML features</li>
          <li>(optional) jmdns.jar: <a href="http://jmdns.sourceforge.net/">jmdns jar, a pure Java implementation of DNSSD</a> for an alternative DNSSD access</li>
          <li>(optional) dbus*.jar, debug-*.jar, hexdump*.jar, unix*.jar and libunix-java.so: for an alternative DNSSD access using <a href="http://avahi.org/">avahi</a> accessed through <a href="http://dbus.freedesktop.org/">dbus</a></li>
        </ul>
      </p>
      <p>
        Both Castor (and its dependencies) and Oro are now bundled with the <omiscid/> release.
        Note that all the dependencies to Castor will perhaps be replaced when Java 6 will be widely used.
      </p>
      <p>You can access the <a href="download/doc-java/javadoc/index.html">javadoc of the user centered API</a> on this website.</p>
      <p>The Java version of <omiscid/> may use a DNSSD implementation installed on your computer. It can also used a pure Java implementation, <a href="http://jmdns.sourceforge.net/">jmdns</a>, if it is in the application classpath. It is bundled with <omiscid/> (<a href="#dnssd-impl">see details about choosing DNSSD implementation</a>). The OSGi tutorial explains how to install and use mDNSResponder (Apple Bonjour) together with its Java bindings.</p>
    <h2>OSGi</h2>
      <p>The OSGi bundle version of <omiscid/> has been tested on the Oscar OSGi platform. To install it, you also need to install the castor bundle available in <a href="http://gforge.inria.fr/frs/?group_id=363">the download section</a>.</p>
      <p>For further details, you can look at the OSGi tutorial below.</p>
    
    <h1>Tutorials</h1>
    <h2>C++</h2>
      <p>You can use the following resources in order to train yourself using <omiscid/>:
         <ul>
           <li>the under-development version of the  <a href="download/doc-c++/Doc/index.html">doxygen documentation</a></li>
           <li>a <a href="download/doc-c++/OMiSCID-C++Tutorial.pdf">tutorial</a> about using user-friendly interface to build  <omiscid/> services.</li>
        </ul>
      </p>
    <h2>Java</h2>
      <!--p>An <omiscid/> starting guide for Java developpers can be found on the <a href="java-tutorial.xml">Java tutorial page</a>.</p-->
      <p>As the C++ and Java APIs are almost identical (modulo the languages specifity), you can also have a look at the C++ tutorials. Your favorite IDE will probably allow you to cope with the slight differences between the C++ and Java APIs.</p>
      <p>You can access the <a href="download/doc-java/javadoc/index.html">javadoc of the user centered API</a> on this website.</p>
    <h2>OSGi</h2>
      <p>Here is a <a href="download/doc-osgi/tutorial.pdf">pre-final release</a> of the <omiscid/> OSGi tutorial. The tutorial references some files that can be found in <a href="download/doc-osgi/curves.zip">a zip of the "curves" files</a>.</p>

    <h1>Custom Settings</h1>
    <h2>Working domain name</h2>
      <p><omiscid/> services are registered under DNSSD in a dedicated domain. By default this domain is <code>_bip._tcp</code> but one can choose the domain in which <omiscid/> will declare and look for services. This can be done by setting the <code>OMISCID_WORKING_DOMAIN</code> environment variable, for example to <code>_bip_test._tcp</code>.</p>
    <h2>Name resolution</h2>
      <p>By default, <omiscid/> uses standard DNS for host name resolution. In some configurations such as Ad-Hoc networks, where there is no DNS server or not all hosts are known by the DNS server, one can use DNSSD for name resolution. This can be done by setting the <code>OMISCIDNS_USE_MDNS_NAME_SOLVING</code> environment variable to any value, for example to <code>true</code>.</p>
    <h2>DNSSD implementation</h2>
      <a name="dnssd-impl"/>
      <p>Java (and OSGi) version of <omiscid/> allows the user to choose how to access DNSSD. This can be controlled using the <code>OMISCID_DNSSD_FACTORY</code> environment variable. By default, <omiscid/> tries to find the best implementation given its runtime environment, it is however possible to force <omiscid/> to try a given method first. The environment variable can take the following values:
        <ul>
          <li><code>mdns</code>: this uses mDNSResponder from Apple. Apple Java binding are known to have some bugs that can affect <omiscid/> in some cases (e.g. big service descriptions).</li>
          <li><code>jmdns</code>: this uses a 100% pure Java implementation of DNSSD. This implementation has a long warm up time.</li>
          <li><code>avahi</code>: this uses a running avahi daemon. This requires to have an avahi daemon running (present in all recent linux distributions). <omiscid/> accesses the daemon through the gnome software bus: dbus.</li>
        </ul>
      </p>
      <p>One can set the <code>OMISCID_DNSSD_FACTORY_VERBOSE_MODE</code> environment variable (to any value) to have <omiscid/> display the implementations being tried (the last shown will be the one used).</p>

    <h1>Presentations</h1>
    <p>If you want to look at some slides presenting <omiscid/>, you can just watch <a href="download/doc-all/presentation-1/index.html">an html presentation of <omiscid/></a>.</p>
    
    <h1>Publications</h1>
    <p>For a detailled description of <omiscid/> architecture and design goals, see this <a href="http://www-prima.inrialpes.fr/prima/pub/Publications/2006/EVRL06/">paper presented at the IEEE workshop SIPE-2006</a>.</p>
  </custom:content>

</page>